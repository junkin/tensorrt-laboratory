# Copyright (c) 2018-2019, NVIDIA CORPORATION. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#  * Neither the name of NVIDIA CORPORATION nor the names of its
#    contributors may be used to endorse or promote products derived
#    from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

RUN apt update && apt install -y --no-install-recommends build-essential autoconf libtool git \
        curl wget pkg-config sudo ca-certificates vim-tiny automake libssl-dev bc python3-pip \
        google-perftools \
 && apt remove -y cmake \
 && apt remove -y libgflags-dev libgflags2v5 \
 && apt remove -y libprotobuf-dev \
 && apt -y autoremove \
 && rm -rf /var/lib/apt/lists/* 

RUN apt update && apt install -y --no-install-recommends \
    pkg-config zip g++ zlib1g-dev unzip python \
 && rm -rf /var/lib/apt/lists/*

env LC_ALL=C.UTF-8
env LANG=C.UTF-8

RUN python3 -m pip install --upgrade pip \
 && python3 -m pip install --upgrade setuptools

ENV BAZEL_VERSION="0.21.0"

RUN wget --progress=bar:force https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \
 && chmod +x bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \
 && ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh \
 && rm -f bazel-$BAZEL_VERSION-installer-linux-x86_64.sh

RUN git clone https://github.com/dmlc/dlpack.git \
 && cd dlpack \
 && git checkout -b trtlab 5c792cef3aee54ad8b7000111c9dc1797f327b59 \
 && mkdir build && cd build \
 && cmake .. \
 && make install \
 && cd ../.. && rm -rf dlpack

RUN git clone -b v1.0.6 https://github.com/dcdillon/cpuaff \
 && cd cpuaff \
 && ls -lF \
 && ./bootstrap.sh \
 && ./configure \
 && make \
 && make install \
 && cd .. && rm -rf cpuaff

RUN git clone https://github.com/cameron314/concurrentqueue.git \
 && cd concurrentqueue \
 && git checkout 8f65a87 \
 && mkdir -p /usr/local/include/moodycamel \
 && cp *.h /usr/local/include/moodycamel/ \
 && cd .. && rm -rf concurrentqueue 

WORKDIR /work
#COPY . .
